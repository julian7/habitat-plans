# IP address to listen on. Set to "0.0.0.0" to listen on all interfaces
ipaddress = "0.0.0.0"
# TCP port to listen on
port = 4646
hostname = "{{cfg.hostname}}"
log-level = "{{cfg.log_level}}"

{{#if cfg.postgresql}}
use-postgresql = true
{{#unless cfg.postgresql.search}}
index-file = "/data/goiardi-index.bin"
{{/unless}}
{{else}}{{#if cfg.mysql}}
use-mysql = true
{{else}}
data-file = "/data/goiardi-data.bin"
{{/if}}
index-file = "/data/goiardi-index.bin"
{{/if}}
local-filestore-dir = "/data/file_checksums"
freeze-interval = {{cfg.freeze_interval}}

# Use the faster, but less safe, old method of storing data in the in-memory data
# store with pointers, rather than encoding the data with gob and giving a new
# copy of the object to each requestor. If this is enabled goiardi will run
# faster in in-memory mode, but one goroutine could change an object while it's
# being used by another. Has no effect when using an SQL backend.
# use-unsafe-mem-store = false

time-slew = "{{cfg.time_slew}}"
conf-root = "/data"
use-auth = {{cfg.use_auth}}
use-ssl = false
# SSL certificate file. If a relative path, it will be set relative to
# conf-root.
# ssl-cert="/path/to/goiardi/conf/cert.pem"
# SSL key file. If a relative path, it will be set relative to conf-root.
# ssl-key="/path/to/goiardi/conf/key.pem"
https-urls = {{cfg.https_urls}}
{{#if cfg.proxy}}
proxy-hostname = "{{cfg.proxy.hostname}}"
proxy-port = {{cfg.proxy.port}}
{{/if}}
disable-webui = {{cfg.disable_webui}}
log-events = {{cfg.log_events}}
log-event-keep = {{cfg.log_event_keep}}

obj-max-size = {{cfg.obj_max_size}}
json-req-max-size = {{cfg.json_req_max_size}}
db-pool-size = {{cfg.db_pool_size}}
max_connections = {{cfg.max_connections}}

{{#if cfg.postgresql}}{{#if cfg.postgresql.search}}
pg-search = true
{{/if}}{{/if}}
dot-search = {{cfg.dot_search}}
convert-search = {{cfg.convert_search}}

{{#if cfg.serf}}
use-serf = true
serf-event-announce = {{cfg.serf.event_announce}}
serf-addr = "{{cfg.serf.address}}"
use-shovey = {{cfg.serf.use_shovey}}
sign-priv-key = "/hab/svc/goiardi/files/shovey.key"
{{else}}
use-serf = false
{{/if}}

{{~#if cfg.statsd}}
use-statsd = true
statsd-addr = "{{cfg.statsd.address}}"
statsd-type = "{{cfg.statsd.type}}"
stastd-instance = "{{cfg.statsd.instance}}"
{{else}}
use-statsd = false
{{~/if}}

{{~#if cfg.postgresql}}
[postgresql]
username = "{{cfg.postgresql.username}}"
password = "{{cfg.postgresql.password}}"
host     = "{{cfg.postgresql.host}}"
port     = "{{cfg.postgresql.port}}"
dbname   = "{{cfg.postgresql.dbname}}"
sslmode  = "{{cfg.postgresql.sslmode}}"
{{else}}{{#if cfg.mysql}}
[mysql]
username = "{{cfg.mysql.username}}"
password = "{{cfg.mysql.password}}"
protocol = "{{cfg.mysql.protocol}}"
address  = "{{cfg.mysql.address}}"
port     = "{{cfg.mysql.port}}"
dbname   = "{{cfg.mysql.dbname}}"
# See https://github.com/go-sql-driver/mysql#parameters for an
# explanation of available parameters
[mysql.extra_params]
tls = "{{cfg.mysql.tls}}"
{{/if}}{{/if}}
